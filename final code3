from mpl_toolkits.mplot3d import Axes3D
from matplotlib import cm
from matplotlib.ticker import LinearLocator, FormatStrFormatter
import matplotlib.pyplot as plt
import numpy as np
import math
r0=[[[0 for i in range(21)]for j in range(21)]for k in range(100)]
for j in range(5,16):
    for i in range(5,16):
        r0[0][j][i]=1
dx=1
dt=0.25
D=1
k=0
while True:
    for j in range(1,20):
        for i in range(1,20):
            r0[k+1][j][i]=r0[k][j][i]+D*dt/(dx)**2*(r0[k][j][i+1]+r0[k][j][i-1]+r0[k][j+1][i]+r0[k][j-1][i]-4*r0[k][j][i])
    k=k+1
    if k>98:
        break
x1=np.array(r0[0])
x2=np.array(r0[10])
x3=np.array(r0[90])
x=np.linspace(-10,10,21)
y=np.linspace(-10,10,21)
X,Y=np.meshgrid(x,y)
fig = figure(figsize=[8,8])
ax = fig.add_subplot(111, projection='3d')
ax.plot_surface(X, Y, x1,rstride=1, cstride=1,cmap=cm.coolwarm,linewidth=0)
ax.set_xlabel('X')
ax.set_ylabel('Y')
ax.set_zlabel('density')
title('t=0')
fig = figure(figsize=[8,8])
ax = fig.add_subplot(111, projection='3d')
ax.plot_surface(X, Y, x2,rstride=1, cstride=1,cmap=cm.coolwarm,linewidth=0)
ax.set_xlabel('X')
ax.set_ylabel('Y')
ax.set_zlabel('density')
ax.set_zlim(0,1)
title('t=10')
fig = figure(figsize=[8,8])
ax = fig.add_subplot(111, projection='3d')
ax.plot_surface(X, Y, x3,rstride=1, cstride=1,cmap=cm.coolwarm,linewidth=0)
ax.set_xlabel('X')
ax.set_ylabel('Y')
ax.set_zlabel('density')
ax.set_zlim(0,1)
title('t=90')
show()


from mpl_toolkits.mplot3d import Axes3D
from matplotlib import cm
from matplotlib.ticker import LinearLocator, FormatStrFormatter
import matplotlib.pyplot as plt
import numpy as np
import math
r0=[[[[0 for i in range(21)]for j in range(21)]for k in range(21)]for n in range(100)]
for k in [10]:
    for j in range(8,13):
        for i in range(8,13):
            r0[0][k][j][i]=1
dx=1
dt=0.1667
D=1
n=0
while True:
    for k in range(1,20):
        for j in range(1,20):
            for i in range(1,20):
                r0[n+1][k][j][i]=r0[n][k][j][i]+D*dt/(dx)**2*(r0[n][k][j][i+1]+r0[n][k][j][i-1]+r0[n][k][j+1][i]+r0[n][k][j-1][i]+r0[n][k+1][j][i]+r0[n][k-1][j][i]-6*r0[n][k][j][i])
    n=n+1
    if n>98:
        break
x1=np.array(r0[0][10])
x2=np.array(r0[10][10])
x3=np.array(r0[90][10])
x=np.linspace(-10,10,21)
y=np.linspace(-10,10,21)
X,Y=np.meshgrid(x,y)
fig = figure(figsize=[8,8])
ax = fig.add_subplot(111, projection='3d')
ax.plot_surface(X, Y, x1,rstride=1, cstride=1,cmap=cm.coolwarm,linewidth=0)
ax.set_xlabel('X')
ax.set_ylabel('Y')
ax.set_zlabel('density')
title('z=0,t=0 in 3D')
fig = figure(figsize=[8,8])
ax = fig.add_subplot(111, projection='3d')
ax.plot_surface(X, Y, x2,rstride=1, cstride=1,cmap=cm.coolwarm,linewidth=0)
ax.set_xlabel('X')
ax.set_ylabel('Y')
ax.set_zlabel('density')
ax.set_zlim(0,1)
title('z=0,t=10 in 3D')
fig = figure(figsize=[8,8])
ax = fig.add_subplot(111, projection='3d')
ax.plot_surface(X, Y, x3,rstride=1, cstride=1,cmap=cm.coolwarm,linewidth=0)
ax.set_xlabel('X')
ax.set_ylabel('Y')
ax.set_zlabel('density')
ax.set_zlim(0,1)
title('z=0,t=90 in 3D')
show()
