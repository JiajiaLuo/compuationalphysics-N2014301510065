import numpy as np
import pylab as pl
from math import *
r0=[[0 for i in range(101)]for j in range(1000)]
for i in [50]:
    r0[0][i]=1
dx=0.01
dt=0.1
D=1./4*(dx**2)/dt
j=0
while True:
    for i in range(1,100):
        r0[j+1][i]=r0[j][i]+(D*dt/(dx**2))*(r0[j][i+1]+r0[j][i-1]-2*r0[j][i])
    j=j+1
    if j>998:
        break
r1=[]
r2=[]
r3=[]
r4=[]
for i in range(101):
    r1.append(r0[20][i])
    r2.append(r0[100][i])
    r3.append(r0[300][i])
    r4.append(r0[700][i])
x=np.linspace(-0.5,0.5,101)
def plot():
    pl.plot(x,r1,label="step="+str(20))
    pl.plot(x,r2,label="step="+str(100))
    pl.plot(x,r3,label="step="+str(300))
    pl.plot(x,r4,label="step="+str(700))
    pl.legend(loc="best",fontsize=12)
    pl.title(r'diffusion  $\rho{(x)}$',fontsize=14)
    pl.xlabel('x')
    pl.ylabel('p')
    pl.xlim(-0.5,0.5)
    pl.show()
plot()


import numpy as np
import pylab as pl
from math import *
r0=[[0 for i in range(101)]for j in range(101)]
for i in [50]:
    r0[0][i]=1
dx=1
dt=0.5
D=1./2*(dx**2)/dt
j=0
while True:
    for i in range(1,100):
        r0[j+1][i]=r0[j][i]+(D*dt/(dx**2))*(r0[j][i+1]+r0[j][i-1]-2*r0[j][i])
    j=j+1
    if j>99:
        break
r1=[]
r2=[]
r3=[]
for i in range(101):
    r1.append(r0[0][i])
    r2.append(r0[10][i])
    r3.append(r0[100][i])
x=np.linspace(-50,50,101)
def plot():
    #figure(figsize=[16,8])
    ax1=pl.subplot(131)
    ax2=pl.subplot(132)
    ax3=pl.subplot(133)
    pl.sca(ax1)
    pl.plot(x,r1,'g',label="step="+str(0))
    pl.plot(x,r1,'k*')
    pl.legend(loc="best",fontsize=12)
    pl.title(r'diffusion in 1D',fontsize=12)
    pl.xlabel('x')
    pl.ylabel('density')
    pl.xlim(-50,50)
    pl.sca(ax2)
    pl.plot(x,r2,'g',label="step="+str(10))
    pl.plot(x,r2,'k*')
    pl.legend(loc="best",fontsize=12)
    pl.title(r'diffusion in 1D',fontsize=12)
    pl.xlabel('x')
    pl.ylabel('density')
    pl.xlim(-50,50)
    pl.sca(ax3)
    pl.plot(x,r3,'g',label="step="+str(100))
    pl.plot(x,r3,'k*')
    pl.legend(loc="best",fontsize=12)
    pl.title(r'diffusion in 1D',fontsize=12)
    pl.xlabel('x')
    pl.ylabel('density')
    pl.xlim(-50,50)
    pl.show()
plot()
